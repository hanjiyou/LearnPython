一基础
(一).变量类型
①变量不需要声明，但使用前必须赋值，赋值以后该变量才会被创建。变量没有类型，我们说的类型指内存中对象的类型
②sequence(序列)是一组有顺序的元素的集合，有两种：list和元组
③'+'无法用于字符串和num之间
(1)Number数字
支持int、float、bool(True和False,区分大小写)、complex(复数),没有长整型
string、list、tuple都属于sequence(序列)，都可以被切片，都可以+拼接
(1.1)数值运算
①bool值可以直接加减
②除法: 2/4得到浮点数，2//4得到一个整数 2.0//4得到0.0
 17%3 #取余
(1.2)常用函数
①int(x)将x转换为一个整数
②float(x) 转换为float
③complex(x) 转换为complex

(2)字符串(不可变)
(2.1)python中单引号和双引号使用完全相同。
(2.2)用法
  1)两种索引方式 ①从左到右从0开始 ②从右到左从-1开始 向左依次减1
  2)转移字符\可被'r'去掉特殊含义，'r'相当于C#中的@
  3)截取: [a:b] 同时使用头下标和伪下标
  4)截取+步长 [a:b:c]
  5)常用运算符:+拼接、*重复输出、[]索引、[:]截取左闭右开、in判断字符串是否包含给定的字符、not in 与in相反
(2.3)字符串格式化
(1)通过%s和%d '%'s代表字符串 %d代表num,例如:'名字%s的年龄是%d'%(name,age)
(2)format讲解 {index:lenght/type}
①通过{}.format函数，例如'{}的年龄是{}'.format(name,age)
②按顺序将参数替换{},!a' (使用 ascii()), '!s' (使用 str()) 和 '!r' (使用 repr()) 可以用于在格式化某个值之前对其进行转化:
③'{0:.3}'.format(math.pi)=3.142 0:.3表示四舍五入保留第一个
参数的3位小数
④{index:lenght}表示指定下标的参数，至少有lenght这么长 长度不够用空格凑
⑤:d用于修饰int类型 :f用于修饰浮点数 :s用于修饰str  下标可以忽略
(3)List列表(可变)
list内可以存储不同类型的变量,写在[]中，用','隔开
(4)Tuple元组(不可变)
①元祖写在()中，用','分开，可以看做特殊的字符串
②元祖只有一个元素时，需要加个','，如tup=(a,)；0个元素时,tup=()
③如果元组不为空时，()可以省略
(5)Set集合(可变)
①用法:使用{}或者set()函数创建集合，如果是空集合，必须使用set()，因为{}用来创建空字典
②功能:进行成员关系测试和删除重复元素
③特点:直接全部输出是无序的
 (5.2)集合运算
①a-b:a和b的差集 |并集 &交集 ^不同时存在于ab中的元素
(6)Dictionary字典(可变)
①key必须是唯一的且不可变类型的(即可以是Num、String、Tupple)
②空字典{}
(二)基础知识
1.python最具特色的就是使用缩进来表示代码块，不需要使用大括号 {}，缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数 不同会报错
2.print输出默认换行，如果想不换行则print(content,end=" ")即把结尾换行符替换成空格
3.导入模块的两种方法
①import somemodule
②from somemodule import a/a,b/'*'(一个成员a或者多个成员a和b或者所有成员 )
(3)常用函数
type(var):返回变量var的所属类型字符串，如:"<class 'int'>"，不认为子类是父类类型
isinstance(var,type):返回bool,判断变量var是否是type类型，会认为子类是父类类型
(三)面向对象
(三.1)函数
1.def关键字定义函数:
def Name():
 return
2.参数
(1)参数传递类型:可变/不可变类型
(2)参数类型
①必需参数
②关键字参数:用关键字参数允许函数调用时参数的顺序与声明时不一致，因为 Python 解释器能够用参数名匹配参数值
③默认参数
④不定长参数
(三.2)面向对象--类
1.基础知识
①通过class关键字创建类,构造函数是__init__()，一般在类内部/父子类中使用，类外部创建对象直接myclass()
②self关键字代表类的实例而非类，只能在当前类内部使用,也可用this代替，一般使用self
③类方法与普通函数的区别:类方法的第一个参数必须为self，且外部调用时对应实参不必传递参数，除非是构造函数调用别的类的构造函数__init__()
④支持多继承Son(P1,P2)
⑤私有属性和方法的声明,以'__'双下划线开头即可，
2.方法覆盖重写
(1)子类中含有和父类同名的方法(哪怕参数不同)，则父类的方法就会被覆盖重写，通过子类的对象只能调用父类的方法
(2)想调用父类或超类的方法，通过super()关键字，如:super(Son,son).myMethod()
3.类专有方法
(1)__init__:构造函数
(2)__del__ 析构函数
(3)__len/cmp/call/add/sub/mul/truediv/mod/pow__:长度/比较/函数调用/+/-/乘/除/求余/乘方
(4)__class__方法，输出当前对象的执行位置.类型，如:__main__.MyClass
4.运算符重载
对类专有的方法进行重载，如__add__和__str__,使用+运算符时会调用__add__()，使用print()打印时调用__str__()
②想要输出类的数据，需要重写__str__(),否则直接打印类会出现<_main>的情况
③反向运算符重载:通过__radd__方法，即在方法名前加'r'，适用于算术运算方法前
④复合运算符重载:__iadd__方法，方法名钱加'i',主要用于列表之间相加，该方法重载+=